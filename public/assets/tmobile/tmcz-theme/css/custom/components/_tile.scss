.tiles {
  margin: $space-vertical-default 0;
  > .row {
    > div {
      display: flex;
      padding-top: ($grid-gutter-width / 2);
      padding-bottom: ($grid-gutter-width / 2);
      @include mq(xxs, max) {
        &.col-xs-6:not(.col-xxs-12) {
          padding-bottom: 0;
          &:nth-child(1),
          &:nth-child(2) {
            padding-top: 0;
          }
          &:nth-child(odd) {
            padding-right: ceil($space-horizontal-small / 2);
          }
          &:nth-child(even) {
            padding-left: ceil($space-horizontal-small / 2);
          }
        }
      }
      > a {
        &.tile {
          color: currentColor;
          &:hover {
            border-color: $tile-border-hover-color;
          }
          &:hover,
          &:focus {
            text-decoration: none;
          }
        }
      }
    }
    > .active {
      > a {
        &.tile {
          &,
          &:hover {
            border-color: $brand-primary;
          }
        }
      }
    }
  }

  // .tiles-large
  &-large {
    margin: ($space-vertical-default + 3) 0;
  }

  // .tiles-strip
  &-strip {
    display: flex;
    flex-wrap: wrap;
    @include mq(xxs) {
      flex-direction: column;
      @include onlyIE {
        flex-direction: row; // IE se chovalo fakt divně, ale tohle to vyřešilo
      }
    }
  }

  // .tiles-flex
  &-flex {
    @include mq(lg, min) {
      flex-wrap: nowrap;
    }
    @include mq(xxs) {
      flex-direction: row;
    }
  }
}

.tile {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  flex: 1; // normálně by stačilo flex-grow:1; ale když je uvnitř obrázek s img-responsive, tak to IE 11 nedává a je potřeba tohle
  padding: $space-vertical-default ($grid-gutter-width / 2);
  border: $tile-border-width solid $tile-border-color;
  border-radius: $border-radius-base;
  background-color: $tile-bg;
  transition-property: border;
  transition-duration: $transition-duration-fast;
  &.text-left {
    text-align: left;
  }
  svg {
    width: $tile-icon-size;
    height: $tile-icon-size;
  }
  @include mq(xs, min) {
    min-height: $tile-min-height;
  }
  @include mq(xxs, max) {
    padding-left: $space-horizontal-small;
    padding-right: $space-horizontal-small;
    .tiles:not(.tiles-slim):not(.tiles-default) & {
      padding: $space-vertical-small ceil($space-horizontal-small / 2);
    }
    svg {
      width: $tile-icon-mobile-size;
      height: $tile-icon-mobile-size;
    }
  }
  .tiles-slim & {
    border-width: $tile-slim-border-width;
    img {
      margin-bottom: floor($space-vertical-small * 1.5);
    }
  }
  a {
    margin-top: $space-vertical-small;
  }
  > a:not(.btn) {
    font-size: $tile-font-size;
    font-weight: $tile-font-weight;
    @include mq(xxs, max) {
      font-size: $font-size-base;
    }
    @include mq(xs, min) {
      &.text-large {
        font-size: $font-size-large;
        line-height: ($font-line-height-xlarge - 1);
      }
    }
  }
  &.js-hover {
    border-color: $tile-border-hover-color;
    a:not(.btn) {
      color: $link-hover-color;
      text-decoration: none;
    }
  }
  h2,
  h3 {
    flex-grow: 1;
    &:first-child {
      margin-top: 0;
    }
  }
  span {
    @include onlyIE() {
      max-width: 100%;
    }
  }

  // .tile-desc
  &-desc {
    display: block;
    line-height: $font-line-height-base;
    margin-top: $space-vertical-small;
    flex-basis: 50%;
    max-width: 100%;
    @include onlyIE() {
      flex-basis: auto;
    }
  }

  .tiles-large & {
    border-radius: $border-radius-large;
    .tile-link {
      margin-top: ($space-vertical-small * 2 + 3);
      display: flex;
      flex-direction: column;
      justify-content: center;
      flex-basis: 50%;
      max-width: 100%;
      @include onlyIE() {
        flex-basis: auto;
        flex-grow: 1;
      }
    }
    svg {
      width: $tile-large-icon-size;
      height: $tile-large-icon-size;
      margin-top: ($space-vertical-small - 3);
    }
    @include mq(xxs, max) {
      .tile-link {
        margin-top: ($space-vertical-small * 1.5);
      }
      svg {
        width: $tile-icon-mobile-size;
        height: $tile-icon-mobile-size;
      }
    }
  }

  .tiles-default & {
    display: block;
    min-height: 0;
    text-align: left;
    border-color: $white;
    padding-left: $space-horizontal-default;
    padding-right: $space-horizontal-default;
  }

  .tiles-default.bordered & {
    border-color: $tile-border-color;
  }

  &.flex {
    display: flex;
  }

  .tiles-strip & {
    position: relative;
    overflow: hidden;
    background-color: $black;
    flex-basis: 100%;
    justify-content: center;
    height: $tile-strip-height;
    border: 0;
    border-radius: 0;
    transition-property: background-size;
    transition-duration: ($transition-duration-default / 2);
    @include mq(xs, max) {
      & + .tile {
        border-top: 1px solid $white;
      }
    }
    > *:not(.tile-img) {
      position: relative;
    }
    h2,
    h3 {
      flex-grow: 0;
    }
    p {
      max-width: 100%;
    }
    &.js-hover {
      .btn-link {
        text-decoration: underline;
      }
      .tile-img {
        img {
          transform: scale(1.1);
        }
      }
    }
    .tile-img {
      height: auto;
      overflow: visible;
      position: static;
      img {
        margin: auto;
        position: absolute;
        top: -9999px;
        left: -9999px;
        bottom: -9999px;
        right: -9999px;
        transition-property: transform;
        transition-duration: $transition-duration-default;
      }
    }
  }

  .tiles-strip-small & {
    height: $tile-strip-small-height;
  }

  .tiles-strip-4 & {
    flex-basis: 25%;
    max-width: 25%;
    @include mq(sm, max) {
      flex-basis: 50%;
      max-width: 50%;
    }
    @include mq(xs, max) {
      flex-basis: 100%;
      max-width: 100%;
    }
    @include mq(sm) {
      border-top: 1px solid $white;
      &:nth-child(even) {
        border-left: 1px solid $white;
      }
      &:nth-child(1)
      &:nth-child(2) {
        border-top: 0;
      }
    }
    @include mq(md, min) {
      & + .tile {
        border-left: 1px solid $white;
      }
    }
  }

  .tiles-flex & {
    border: 1px solid #fff;
    @include mq(md, max) {
      flex-basis: 25%;
      max-width: 25%;
    }
    @include mq(xs, max) {
      flex-basis: 50%;
      max-width: 50%;
    }
  }
}

.background-tiles {
  @include mq(md, min) {
    background-image: -webkit-linear-gradient(top, #fff $tile-gradient-height, $tile-gradient-primary-bg $tile-gradient-height);
    background-image:         linear-gradient(to bottom, #fff $tile-gradient-height, $tile-gradient-primary-bg $tile-gradient-height);
  }
}
